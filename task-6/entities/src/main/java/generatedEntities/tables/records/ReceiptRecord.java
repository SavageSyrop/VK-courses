/*
 * This file is generated by jOOQ.
 */
package generatedEntities.tables.records;


import generatedEntities.tables.Receipt;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReceiptRecord extends UpdatableRecordImpl<ReceiptRecord> implements Record3<Integer, LocalDate, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.receipt.id</code>.
     */
    public ReceiptRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.receipt.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.receipt.creation_date</code>.
     */
    public ReceiptRecord setCreationDate(LocalDate value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.receipt.creation_date</code>.
     */
    public LocalDate getCreationDate() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>public.receipt.organisation_tax_number</code>.
     */
    public ReceiptRecord setOrganisationTaxNumber(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.receipt.organisation_tax_number</code>.
     */
    public Long getOrganisationTaxNumber() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, LocalDate, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, LocalDate, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Receipt.RECEIPT.ID;
    }

    @Override
    public Field<LocalDate> field2() {
        return Receipt.RECEIPT.CREATION_DATE;
    }

    @Override
    public Field<Long> field3() {
        return Receipt.RECEIPT.ORGANISATION_TAX_NUMBER;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDate component2() {
        return getCreationDate();
    }

    @Override
    public Long component3() {
        return getOrganisationTaxNumber();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDate value2() {
        return getCreationDate();
    }

    @Override
    public Long value3() {
        return getOrganisationTaxNumber();
    }

    @Override
    public ReceiptRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ReceiptRecord value2(LocalDate value) {
        setCreationDate(value);
        return this;
    }

    @Override
    public ReceiptRecord value3(Long value) {
        setOrganisationTaxNumber(value);
        return this;
    }

    @Override
    public ReceiptRecord values(Integer value1, LocalDate value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReceiptRecord
     */
    public ReceiptRecord() {
        super(Receipt.RECEIPT);
    }

    /**
     * Create a detached, initialised ReceiptRecord
     */
    public ReceiptRecord(Integer id, LocalDate creationDate, Long organisationTaxNumber) {
        super(Receipt.RECEIPT);

        setId(id);
        setCreationDate(creationDate);
        setOrganisationTaxNumber(organisationTaxNumber);
    }

    /**
     * Create a detached, initialised ReceiptRecord
     */
    public ReceiptRecord(generatedEntities.tables.pojos.Receipt value) {
        super(Receipt.RECEIPT);

        if (value != null) {
            setId(value.getId());
            setCreationDate(value.getCreationDate());
            setOrganisationTaxNumber(value.getOrganisationTaxNumber());
        }
    }
}
